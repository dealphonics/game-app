// –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Telegram
const tg = window.Telegram.WebApp;
tg.ready();
tg.expand();
tg.setHeaderColor('#0a0a0f');

// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
let userScore = 0;
let unlockedTracks = [];
let currentGameType = null;
let gameRunning = false;
let gamePaused = false;
let selectedAlbum = 'karmageddon';

// –í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–∏ –≤—ã–ø–∞–¥–µ–Ω–∏—è –ø–æ —Ä–µ–¥–∫–æ—Å—Ç–∏
const rarityChances = {
    'common': 65,
    'rare': 20,
    'epic': 10,
    'legendary': 5
};

// –¶–≤–µ—Ç–∞ —Ä–µ–¥–∫–æ—Å—Ç–∏
const rarityColors = {
    'common': '#4CAF50',
    'rare': '#2196F3',
    'epic': '#9C27B0',
    'legendary': '#FF9800'
};

// –ù–∞–∑–≤–∞–Ω–∏—è —Ä–µ–¥–∫–æ—Å—Ç–∏
const rarityNames = {
    'common': '–û–±—ã—á–Ω—ã–π',
    'rare': '–†–µ–¥–∫–∏–π',
    'epic': '–≠–ø–∏—á–µ—Å–∫–∏–π',
    'legendary': '–õ–µ–≥–µ–Ω–¥–∞—Ä–Ω—ã–π'
};

// –ê–õ–¨–ë–û–ú–´ –° –¢–†–ï–ö–ê–ú–ò
const albums = {
    karmageddon: {
        name: 'Karmageddon',
        artist: 'Kizaru',
        year: '2024',
        coverIcon: 'üé≠',
        coverClass: 'karmageddon',
        coverUrl: 'https://raw.githubusercontent.com/dealphonics/game-app/main/covers/karmageddon_cover.jpg',
        tracks: [
            { id: 'k1', title: '–î–µ–∂–∞–≤—é', artist: 'Kizaru', rarity: 'legendary', audioFile: 'karmageddon/dezhavu.mp3' },
            { id: 'k2', title: 'Top Dog', artist: 'Kizaru', rarity: 'common', audioFile: 'karmageddon/top_dog.mp3' },
            { id: 'k3', title: '–í–æ–¥–æ–ø–∞–¥', artist: 'Kizaru', rarity: 'rare', audioFile: 'karmageddon/vodopad.mp3' },
            { id: 'k4', title: '–î–µ—Ä–∂—É —Ä–∞–π–æ–Ω', artist: 'Kizaru', rarity: 'epic', audioFile: 'karmageddon/derzhu_raion.mp3' },
            { id: 'k5', title: '–í—Å–µ —á—Ç–æ —É–≥–æ–¥–Ω–æ', artist: 'Kizaru', rarity: 'common', audioFile: 'karmageddon/vse_chto_ugodno.mp3' },
            { id: 'k6', title: 'MONEY LONG', artist: 'Kizaru', rarity: 'legendary', audioFile: 'karmageddon/money_long.mp3' },
            { id: 'k7', title: 'Deep End', artist: 'Kizaru', rarity: 'epic', audioFile: 'karmageddon/deep_end.mp3' },
            { id: 'k8', title: '–°–∏–º —Å–∞–ª–∞–±–∏–º', artist: 'Kizaru', rarity: 'common', audioFile: 'karmageddon/sim_salabim.mp3' },
            { id: 'k9', title: 'Smooth operator', artist: 'Kizaru', rarity: 'rare', audioFile: 'karmageddon/smooth_operator.mp3' },
            { id: 'k10', title: '–ü—Å–∏—Ö–æ–ø–∞—Ç-–ª—É–Ω–∞—Ç–∏–∫', artist: 'Kizaru', rarity: 'epic', audioFile: 'karmageddon/psihopat_lunatik.mp3' },
            { id: 'k11', title: '–Ø —Å–¥–µ–ª–∞–ª —ç—Ç–æ', artist: 'Kizaru', rarity: 'common', audioFile: 'karmageddon/ya_sdelal_eto.mp3' },
            { id: 'k12', title: '–ï—â—ë –æ–¥–Ω–∞ –Ω–æ—á—å', artist: 'Kizaru', rarity: 'common', audioFile: 'karmageddon/eshe_odna_noch.mp3' },
            { id: 'k13', title: 'Cinderella', artist: 'Kizaru', rarity: 'rare', audioFile: 'karmageddon/cinderella.mp3' },
            { id: 'k14', title: '–ù–∞ –º–Ω–µ –¥–µ—Ç–∫–∞', artist: 'Kizaru', rarity: 'common', audioFile: 'karmageddon/na_mne_detka.mp3' },
            { id: 'k15', title: '–ò—Å–ø–æ–≤–µ–¥—å', artist: 'Kizaru', rarity: 'rare', audioFile: 'karmageddon/ispoved.mp3' }
        ]
    },
    psychi: {
        name: '–ü—Å–∏—Ö–∏ –ø–æ–ø–∞–¥–∞—é—Ç –≤ —Ç–æ–ø',
        artist: '–ú–∞–∫—Å –ö–æ—Ä–∂',
        year: '2023',
        coverIcon: 'üß†',
        coverClass: 'psychi',
        coverUrl: 'https://raw.githubusercontent.com/dealphonics/game-app/main/covers/psychi_cover.jpg',
        tracks: [
            { id: 'p1', title: '–°–Ω–∞–¥–æ–±—å–µ', artist: '–ú–∞–∫—Å –ö–æ—Ä–∂', rarity: 'epic', audioFile: 'psychi/snadobye.mp3' },
            { id: 'p2', title: '–ê—Ñ–≥–∞–Ω', artist: '–ú–∞–∫—Å –ö–æ—Ä–∂', rarity: 'legendary', audioFile: 'psychi/afgan.mp3' },
            { id: 'p3', title: '–°–æ–∂–∂–µ–Ω—ã', artist: '–ú–∞–∫—Å –ö–æ—Ä–∂', rarity: 'epic', audioFile: 'psychi/sozhzheny.mp3' },
            { id: 'p4', title: '–õ—É—á—à–∏–π –≤–∞–π–±', artist: '–ú–∞–∫—Å –ö–æ—Ä–∂', rarity: 'rare', audioFile: 'psychi/luchshiy_vaib.mp3' },
            { id: 'p5', title: 'Young haze', artist: '–ú–∞–∫—Å –ö–æ—Ä–∂', rarity: 'common', audioFile: 'psychi/young_haze.mp3' },
            { id: 'p6', title: '–£–ª–∏—Ü—ã –±–µ–∑ —Ñ–æ–Ω–∞—Ä–µ–π', artist: '–ú–∞–∫—Å –ö–æ—Ä–∂', rarity: 'rare', audioFile: 'psychi/ulitsy_bez_fonarey.mp3' },
            { id: 'p7', title: '–¢–∞–∫ –∏ –∑–Ω–∞–ª', artist: '–ú–∞–∫—Å –ö–æ—Ä–∂', rarity: 'rare', audioFile: 'psychi/tak_i_znal.mp3' },
            { id: 'p8', title: '–ù–∞ –¥–æ–º—É', artist: '–ú–∞–∫—Å –ö–æ—Ä–∂', rarity: 'rare', audioFile: 'psychi/na_domu.mp3' },
            { id: 'p9', title: 'Animals', artist: '–ú–∞–∫—Å –ö–æ—Ä–∂', rarity: 'common', audioFile: 'psychi/animals.mp3' },
            { id: 'p10', title: '–ó–∞–ø—Ä–∞–≤–∫–∞', artist: '–ú–∞–∫—Å –ö–æ—Ä–∂', rarity: 'common', audioFile: 'psychi/zapravka.mp3' },
            { id: 'p11', title: '–ë–∞–ª–∫–æ–Ω—ã', artist: '–ú–∞–∫—Å –ö–æ—Ä–∂', rarity: 'epic', audioFile: 'psychi/balkony.mp3' },
            { id: 'p12', title: '–ö–∞—Ä–º–∞–Ω—ã', artist: '–ú–∞–∫—Å –ö–æ—Ä–∂', rarity: 'common', audioFile: 'psychi/karmany.mp3' },
            { id: 'p13', title: '–î–æ–≤–µ—Ä—è–ª', artist: '–ú–∞–∫—Å –ö–æ—Ä–∂', rarity: 'rare', audioFile: 'psychi/doveryal.mp3' },
            { id: 'p14', title: '–í–æ–ª—è', artist: '–ú–∞–∫—Å –ö–æ—Ä–∂', rarity: 'epic', audioFile: 'psychi/volya.mp3' },
            { id: 'p15', title: '–¢–æ–Ω–∫–∞—è –∫—Ä–∞—Å–Ω–∞—è –Ω–∏—Ç—å', artist: '–ú–∞–∫—Å –ö–æ—Ä–∂', rarity: 'common', audioFile: 'psychi/tonkaya_krasnaya_nit.mp3' },
            { id: 'p16', title: '–ñ–∏–∑–Ω—å –Ω–µ –ì–æ–ª–ª–∏–≤—É–¥', artist: '–ú–∞–∫—Å –ö–æ—Ä–∂', rarity: 'epic', audioFile: 'psychi/zhizn_ne_gollivud.mp3' },
            { id: 'p17', title: '–ò—Å–∫–ª—é—á–µ–Ω–∏–µ', artist: '–ú–∞–∫—Å –ö–æ—Ä–∂', rarity: 'common', audioFile: 'psychi/isklyuchenie.mp3' },
            { id: 'p18', title: '17 –ª–µ—Ç', artist: '–ú–∞–∫—Å –ö–æ—Ä–∂', rarity: 'legendary', audioFile: 'psychi/17_let.mp3' },
            { id: 'p19', title: '–ù–µ –≥–æ–≤–æ—Ä–∏—Ç–µ –¥—Ä—É–≥—É –Ω–∏–∫–æ–≥–¥–∞', artist: '–ú–∞–∫—Å –ö–æ—Ä–∂', rarity: 'common', audioFile: 'psychi/ne_govorite_drugu_nikogda.mp3' }
        ]
    }
};

// –ü–∞—Ç—Ç–µ—Ä–Ω—ã –±–ª–æ–∫–æ–≤ –¥–ª—è –∏–≥—Ä
const blockPatterns = [
    () => { return { rows: 4, cols: 7, pattern: 'full' }; },
    () => { 
        const blocks = [];
        for (let row = 0; row < 5; row++) {
            const blocksInRow = 7 - row * 2;
            const startCol = row;
            for (let col = 0; col < blocksInRow; col++) {
                blocks.push({ row: row, col: startCol + col });
            }
        }
        return { custom: blocks };
    }
];

// –ê–í–¢–û–°–û–•–†–ê–ù–ï–ù–ò–ï
function saveProgress() {
    const progressData = {
        userScore: userScore,
        unlockedTracks: unlockedTracks,
        selectedAlbum: selectedAlbum,
        timestamp: Date.now()
    };
    localStorage.setItem('soundkeeper_progress', JSON.stringify(progressData));
}

function loadProgress() {
    const saved = localStorage.getItem('soundkeeper_progress');
    if (saved) {
        try {
            const data = JSON.parse(saved);
            userScore = data.userScore || 0;
            unlockedTracks = data.unlockedTracks || [];
            selectedAlbum = data.selectedAlbum || 'karmageddon';
            
            document.getElementById('scoreDisplay').textContent = userScore;
            updateTracksCount();
            updateActiveAlbum();
            
            console.log('–ü—Ä–æ–≥—Ä–µ—Å—Å –∑–∞–≥—Ä—É–∂–µ–Ω:', data);
        } catch (e) {
            console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞:', e);
        }
    }
}

// –¢–ï–°–¢–û–í–´–ô –†–ï–ñ–ò–ú - —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ç—Ä–µ–∫–æ–≤ –¥–ª—è –¥–µ–º–æ
function enableTestMode() {
    // –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ç—Ä–µ–∫–æ–≤ –¥–ª—è —Ç–µ—Å—Ç–∞
    const testTracks = ['k1', 'k2', 'k3', 'p1', 'p2'];
    testTracks.forEach(trackId => {
        if (!unlockedTracks.includes(trackId)) {
            unlockedTracks.push(trackId);
        }
    });
    
    // –î–æ–±–∞–≤–ª—è–µ–º –æ—á–∫–∏
    userScore = 1000;
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º
    saveProgress();
    updateScore(0);
    updateTracksCount();
    
    console.log('Test mode enabled! Added tracks and points.');
}

// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤–∫–ª—é—á–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—É—Å–∫–µ
document.addEventListener('DOMContentLoaded', function() {
    loadProgress();
    
    // –ï—Å–ª–∏ –Ω–µ—Ç —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Ç—Ä–µ–∫–æ–≤, –≤–∫–ª—é—á–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º
    if (unlockedTracks.length === 0) {
        enableTestMode();
        tg.showAlert('–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –ú—ã –¥–æ–±–∞–≤–∏–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ç—Ä–µ–∫–æ–≤ –¥–ª—è –æ–∑–Ω–∞–∫–æ–º–ª–µ–Ω–∏—è.');
    }
    
    updateTracksCount();
    updateActiveAlbum();
});

// –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ª—É—á–∞–π–Ω–æ–≥–æ —Ç—Ä–µ–∫–∞
function getRandomTrack() {
    const currentAlbum = albums[selectedAlbum];
    const random = Math.random() * 100;
    let rarity;
    
    if (random <= rarityChances.legendary) {
        rarity = 'legendary';
    } else if (random <= rarityChances.legendary + rarityChances.epic) {
        rarity = 'epic';
    } else if (random <= rarityChances.legendary + rarityChances.epic + rarityChances.rare) {
        rarity = 'rare';
    } else {
        rarity = 'common';
    }
    
    const tracksOfRarity = currentAlbum.tracks.filter(track => track.rarity === rarity);
    return tracksOfRarity[Math.floor(Math.random() * tracksOfRarity.length)];
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—á–µ—Ç–∞
function updateScore(points) {
    userScore += points;
    document.getElementById('scoreDisplay').textContent = userScore;
    updateTracksCount();
    saveProgress();
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—á–µ—Ç—á–∏–∫–∞ —Ç—Ä–µ–∫–æ–≤
function updateTracksCount() {
    const totalTracks = albums.karmageddon.tracks.length + albums.psychi.tracks.length;
    const tracksCount = document.getElementById('tracksCount');
    const totalTracksEl = document.getElementById('totalTracks');
    
    if (tracksCount) tracksCount.textContent = unlockedTracks.length;
    if (totalTracksEl) totalTracksEl.textContent = totalTracks;
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –±–∞—Ä
    const progressBar = document.querySelector('.progress-bar');
    if (progressBar) {
        const progress = (unlockedTracks.length / totalTracks) * 100;
        progressBar.style.width = `${progress}%`;
    }
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –∞–ª—å–±–æ–º–∞
function updateActiveAlbum() {
    const activeAlbumEl = document.getElementById('activeAlbum');
    if (activeAlbumEl) {
        activeAlbumEl.textContent = `üìÄ ${albums[selectedAlbum].name}`;
    }
    
    // –û–±–Ω–æ–≤–ª—è–µ–º showcase –∞–ª—å–±–æ–º–∞
    updateAlbumShowcase();
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ showcase –∞–ª—å–±–æ–º–∞
function updateAlbumShowcase() {
    const album = albums[selectedAlbum];
    const coverEl = document.getElementById('showcaseAlbumCover');
    const nameEl = document.getElementById('showcaseAlbumName');
    const artistEl = document.getElementById('showcaseAlbumArtist');
    
    if (coverEl) coverEl.src = album.coverUrl;
    if (nameEl) nameEl.textContent = album.name;
    if (artistEl) artistEl.textContent = album.artist;
}

// –û—Ç–∫—Ä—ã—Ç–∏–µ –∏–≥—Ä–æ–≤–æ–≥–æ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
function openGameModal(gameType) {
    currentGameType = gameType;
    
    // –°–æ–∑–¥–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
    let modal = document.getElementById('gameModal');
    if (!modal) {
        modal = document.createElement('div');
        modal.id = 'gameModal';
        modal.className = 'modal';
        modal.innerHTML = `
            <div class="modal-content">
                <div class="modal-header">
                    <h2 class="modal-title" id="gameTitle">–ò–≥—Ä–∞</h2>
                    <button class="close" onclick="closeGameModal()">&times;</button>
                </div>
                <div class="modal-body">
                    <div class="game-score" id="currentGameScore">–û—á–∫–∏: 0</div>
                    <div class="game-stats">
                        <span>–£—Ä–æ–≤–µ–Ω—å: <span id="gameLevel">1</span></span>
                        <span>–í—Ä–µ–º—è: <span id="gameTime">0:00</span></span>
                        <span>–î–æ —Ç—Ä–µ–∫–∞: <span id="timeToTrack">60s</span></span>
                    </div>
                    <div style="position: relative;">
                        <canvas id="gameCanvas" width="320" height="240"></canvas>
                        <div id="countdownDiv"></div>
                        <div id="levelTransitionDiv"></div>
                    </div>
                    <div class="game-instructions" id="gameInstructions">
                        –ù–∞–∂–º–∏—Ç–µ –ø–æ —ç–∫—Ä–∞–Ω—É –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
                    </div>
                    <div id="gameOverDiv" style="display: none;">
                        <button class="restart-btn" onclick="restartCurrentGame()">üîÑ –ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ</button>
                    </div>
                </div>
            </div>
        `;
        document.body.appendChild(modal);
    }
    
    modal.style.display = 'block';
    document.getElementById('gameOverDiv').style.display = 'none';
    
    const title = document.getElementById('gameTitle');
    if (gameType === 'risk') {
        title.textContent = '‚öîÔ∏è Risk of Rain';
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–≥—Ä—É–∂–µ–Ω –ª–∏ —Å–∫—Ä–∏–ø—Ç –∏–≥—Ä—ã
        if (typeof startRiskGame === 'function') {
            startRiskGame();
        } else {
            console.error('Risk game script not loaded');
        }
    } else if (gameType === 'doodle') {
        title.textContent = 'üéØ Doodle Jump';
        if (typeof startDoodleGame === 'function') {
            startDoodleGame();
        } else {
            console.error('Doodle game script not loaded');
        }
    }
}

// –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Ç–µ–∫—É—â–µ–π –∏–≥—Ä—ã
function restartCurrentGame() {
    if (currentGameType === 'risk' && typeof startRiskGame === 'function') {
        startRiskGame();
    } else if (currentGameType === 'doodle' && typeof startDoodleGame === 'function') {
        startDoodleGame();
    }
}

// –ó–∞–∫—Ä—ã—Ç–∏–µ –∏–≥—Ä–æ–≤–æ–≥–æ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
function closeGameModal() {
    gameRunning = false;
    gamePaused = false;
    currentGameType = null;
    
    const modal = document.getElementById('gameModal');
    if (modal) modal.style.display = 'none';
    
    const canvas = document.getElementById('gameCanvas');
    if (canvas) {
        const ctx = canvas.getContext('2d');
        ctx.clearRect(0, 0, canvas.width, canvas.height);
    }
    
    const countdownDiv = document.getElementById('countdownDiv');
    if (countdownDiv) countdownDiv.innerHTML = '';
    
    const levelTransitionDiv = document.getElementById('levelTransitionDiv');
    if (levelTransitionDiv) levelTransitionDiv.innerHTML = '';
    
    // –°–∫—Ä—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –ø–æ–ª–Ω–æ–≥–æ —ç–∫—Ä–∞–Ω–∞ –µ—Å–ª–∏ –µ—Å—Ç—å
    const fullscreenBtn = document.getElementById('fullscreenBtn');
    if (fullscreenBtn) {
        fullscreenBtn.style.display = 'none';
    }
    
    // –í—ã—Ö–æ–¥–∏–º –∏–∑ –ø–æ–ª–Ω–æ—ç–∫—Ä–∞–Ω–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞
    if (document.fullscreenElement) {
        document.exitFullscreen();
    }
}

// –û—Ç–∫—Ä—ã—Ç–∏–µ –º—É–∑—ã–∫–∞–ª—å–Ω–æ–≥–æ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
function openMusicModal() {
    // –°–æ–∑–¥–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
    let modal = document.getElementById('musicModal');
    if (!modal) {
        modal = document.createElement('div');
        modal.id = 'musicModal';
        modal.className = 'modal';
        modal.innerHTML = `
            <div class="modal-content">
                <div class="modal-header">
                    <h2 class="modal-title" id="musicModalTitle">üìÄ Karmageddon</h2>
                    <button class="close" onclick="closeMusicModal()">&times;</button>
                </div>
                <div class="modal-body">
                    <div class="album-selector">
                        <button class="album-btn active" id="albumBtn1" onclick="selectAlbum('karmageddon')">
                            Karmageddon
                        </button>
                        <button class="album-btn" id="albumBtn2" onclick="selectAlbum('psychi')">
                            –ü—Å–∏—Ö–∏ –ø–æ–ø–∞–¥–∞—é—Ç –≤ —Ç–æ–ø
                        </button>
                    </div>
                    
                    <div class="album-cover karmageddon" id="albumCover" 
                         style="background-image: url('https://raw.githubusercontent.com/dealphonics/game-app/main/covers/karmageddon_cover.jpg');">
                    </div>
                    
                    <div class="album-info" id="albumInfo">
                        15 —Ç—Ä–µ–∫–æ–≤ ‚Ä¢ –ê–ª—å–±–æ–º 2024
                    </div>
                    
                    <div class="tracks-container" id="tracksList"></div>
                </div>
            </div>
        `;
        document.body.appendChild(modal);
    }
    
    modal.style.display = 'block';
    selectAlbum(selectedAlbum);
}

// –ó–∞–∫—Ä—ã—Ç–∏–µ –º—É–∑—ã–∫–∞–ª—å–Ω–æ–≥–æ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
function closeMusicModal() {
    const modal = document.getElementById('musicModal');
    if (modal) modal.style.display = 'none';
}

// –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–ø–ª—ã–≤–∞—é—â–µ–µ –æ–∫–Ω–æ —Ç—Ä–µ–∫–∞
function showTrackPopup(track, isNew) {
    gamePaused = true;
    
    const popup = document.createElement('div');
    popup.className = 'track-popup';
    const rarityClass = `rarity-${track.rarity}`;
    
    popup.innerHTML = `
        <h3>${isNew ? 'üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è—é!' : 'üìÄ –¢—Ä–µ–∫ —É–∂–µ –µ—Å—Ç—å'}</h3>
        <div style="font-size: 40px; margin: 15px 0; color: ${rarityColors[track.rarity]};">üíø</div>
        <div class="track-name" style="color: ${rarityColors[track.rarity]};">${track.title}</div>
        <div class="track-artist">${track.artist}</div>
        <div class="rarity-badge ${rarityClass}" style="margin: 10px 0;">${rarityNames[track.rarity]}</div>
        <p style="color: #aaa; margin: 10px 0; font-size: 12px;">
            ${isNew ? '–¢—ã –≤—ã–±–∏–ª –Ω–æ–≤—ã–π —Ç—Ä–µ–∫!' : '–≠—Ç–æ—Ç —Ç—Ä–µ–∫ —É —Ç–µ–±—è —É–∂–µ –µ—Å—Ç—å.'}
        </p>
        <button class="restart-btn" onclick="closeTrackPopup(this)" style="margin-top: 15px;">
            –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –∏–≥—Ä—É
        </button>
    `;
    
    document.body.appendChild(popup);
    
    if (isNew) {
        tg.HapticFeedback.impactOccurred('heavy');
        saveProgress();
    } else {
        tg.HapticFeedback.impactOccurred('light');
    }
}

// –ó–∞–∫—Ä—ã—Ç—å –≤—Å–ø–ª—ã–≤–∞—é—â–µ–µ –æ–∫–Ω–æ —Ç—Ä–µ–∫–∞
function closeTrackPopup(button) {
    button.parentElement.remove();
    gamePaused = false;
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–ª–∏–∫–æ–≤ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
document.addEventListener('DOMContentLoaded', function() {
    // –ó–∞–≥—Ä—É–∂–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å
    loadProgress();
    updateTracksCount();
    updateActiveAlbum();
    
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    const navItems = document.querySelectorAll('.nav-item');
    navItems.forEach(item => {
        item.addEventListener('click', function() {
            navItems.forEach(n => n.classList.remove('active'));
            this.classList.add('active');
        });
    });
    
    // –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–∞—è –∫–Ω–æ–ø–∫–∞ Play
    const playBtn = document.querySelector('.nav-play-btn');
    if (playBtn) {
        playBtn.addEventListener('click', function() {
            // –û—Ç–∫—Ä—ã–≤–∞–µ–º –ø–µ—Ä–≤—É—é –¥–æ—Å—Ç—É–ø–Ω—É—é –∏–≥—Ä—É
            openGameModal('risk');
        });
    }
    
    // –ö–Ω–æ–ø–∫–∏ Play All –∏ Shuffle
    const playAllBtn = document.querySelector('.btn-play-album');
    if (playAllBtn) {
        playAllBtn.addEventListener('click', function() {
            tg.showAlert('–§—É–Ω–∫—Ü–∏—è –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ');
        });
    }
    
    const shuffleBtn = document.querySelector('.btn-shuffle');
    if (shuffleBtn) {
        shuffleBtn.addEventListener('click', function() {
            tg.showAlert('–§—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ–º–µ—à–∏–≤–∞–Ω–∏—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ');
        });
    }
    
    const favoriteBtn = document.querySelector('.btn-favorite');
    if (favoriteBtn) {
        favoriteBtn.addEventListener('click', function() {
            this.style.color = this.style.color === 'red' ? '' : 'red';
            tg.HapticFeedback.impactOccurred('light');
        });
    }
    
    // Daily rewards
    const claimBtn = document.querySelector('.claim-btn');
    if (claimBtn) {
        claimBtn.addEventListener('click', function() {
            const rewardItem = this.closest('.reward-item');
            if (rewardItem) {
                rewardItem.classList.remove('active');
                rewardItem.classList.add('completed');
                updateScore(100);
                this.style.display = 'none';
                tg.HapticFeedback.impactOccurred('medium');
                tg.showAlert('–ù–∞–≥—Ä–∞–¥–∞ –ø–æ–ª—É—á–µ–Ω–∞! +100 –æ—á–∫–æ–≤');
            }
        });
    }
    
    // Coming soon notify
    const notifyBtn = document.querySelector('.game-notify-btn');
    if (notifyBtn) {
        notifyBtn.addEventListener('click', function() {
            tg.showAlert('–í—ã –±—É–¥–µ—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω—ã –æ –≤—ã—Ö–æ–¥–µ –∏–≥—Ä—ã!');
            this.innerHTML = '<span>‚úì –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤–∫–ª—é—á–µ–Ω–æ</span>';
            this.style.background = 'var(--gradient-success)';
        });
    }
    
    // View All button
    const viewAllBtn = document.querySelector('.section-action');
    if (viewAllBtn) {
        viewAllBtn.addEventListener('click', function() {
            openMusicModal();
        });
    }
});

// –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω –ø–æ –∫–ª–∏–∫—É –≤–Ω–µ –∏—Ö
window.onclick = function(event) {
    if (event.target.classList.contains('modal')) {
        if (event.target.id === 'gameModal') {
            closeGameModal();
        } else if (event.target.id === 'musicModal') {
            closeMusicModal();
        }
    }
};
